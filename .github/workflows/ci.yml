name: CI (uv + nox)

on:
  push:
    branches: [ main, master, develop, '**' ]
  pull_request:
    branches: [ '**' ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  ci:
    name: Run nox sessions with uv
    runs-on: ubuntu-latest
    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          check-latest: true

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: 'latest'

      - name: Cache uv and venv
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/uv
            .venv
          key: ${{ runner.os }}-uv-${{ hashFiles('uv.lock') }}-${{ hashFiles('constraints/*.txt') }}
          restore-keys: |
            ${{ runner.os }}-uv-

      - name: Sync dependencies (with dev extras)
        run: |
          uv sync --extra dev

      - name: Show env versions
        run: |
          python --version
          uv --version
          nox --version || true

      - name: Run full CI via nox
        env:
          UV_NO_SYNC: 1
        run: |
          uv run nox -s ci

      - name: Upload coverage (artifact)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-artifacts
          path: |
            .coverage
            coverage.xml
          if-no-files-found: ignore
